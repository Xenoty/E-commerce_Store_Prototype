@model SurfLocalShop.ViewModels.BasketViewModel

@{
    ViewBag.Title = "Your Basket";
}

<style>
    .remove-feature {
        /*background-color: #afafaf;*/
        color: red;
        padding: 2px 10px;
        border-radius: 5px;
    }

    .primary-overide {
        background-color: var(--primary);
        border: none;
        font-size: 15px;
    }

    h2 {
        text-align: center;
        color: var(--primary);
        /* margin-bottom: 5vh; */
        margin-top: 5vh;
        font-size: 2.3rem;
    }

    .product-item a {
        width: 100%;
        display: block;
    }

    .product-item img {
        width: 100%;
        max-width: 60px;
        margin: auto;
        display: block;
    }

    .basket-total * {
        font-size: 18px;
        color: white;
    }

    .basket-total {
        padding: 2rem 0pc;
        background-color: var(--primary);
        line-height: 36px;
    }

    .order-now{
        background-color: white;
        padding: 5px 10px;
        color: var(--primary) !important;
        border-radius: 4px;
        border:none;
        transition: background-color 0.2s ease;
    }

    .order-now:hover {
        background-color: var(--primaryDarker);
        color:white !important;
    }

    .update-feature{
        overflow:auto;
    }

    .update-feature input{
        float:right;
    }
</style>

<h2>@ViewBag.Title</h2>



@if (Model.BasketLines.Count() > 0)
{
    <div>
        @using (Html.BeginForm("UpdateBasket", "Basket", FormMethod.Post, new {style ="margin-bottom:2rem;"}))
        {
            @Html.AntiForgeryToken();
            <div class="update-feature">
                <input class="btn btn-sm btn-success" type="submit" value="Update Basket" />
            </div>
       
            <hr />
            <div class="row">
                <div class="col-md-4"><label>Item</label></div>
                <div class="col-md-3"><label>Quantity</label></div>
                <div class="col-md-1"><label>Price</label></div>
                <div class="col-md-1"><label>Subtotal</label></div>
            </div>
            <hr />
            for (int i = 0; i < Model.BasketLines.Count; i++)
            {
            <div class="row">
                <div class="col-md-4 product-item">
                    @*@Html.ActionLink(Model.BasketLines[i].Product.Name, "Details", "Products", new { id = Model.BasketLines[i].ProductID }, null)*@
                    <div class="product-name">
                        @Model.BasketLines[i].Product.Name
                    </div>
                   
                    <a href="@Url.Action("Details", "Products", new {id = Model.BasketLines[i].ProductID})">
                        <br />
                        @if (Model.BasketLines[i].Product.ProductImageMappings != null && Model.BasketLines[i].Product.ProductImageMappings.Any())
                        {
                            
                            <img src="@(Url.Content(Constants.ProductThumbnailPath) +
                                Model.BasketLines[i].Product.ProductImageMappings.OrderBy(pim => pim.ImageNumber).ElementAt(0).ProductImage.FileName)">
                          
                        }
                    </a>
                </div>
                <div class="col-md-3">
                    @Html.HiddenFor(productID => Model.BasketLines[i].ProductID)
                    @Html.TextBoxFor(quantity => Model.BasketLines[i].Quantity)
                    <p>
                        @Html.ValidationMessageFor(quantity => Model.BasketLines[i].Quantity,"", new { @class = "text-danger" })
                    </p>
                </div>
                <div class="col-md-1">
                    @Html.DisplayFor(price => Model.BasketLines[i].Product.Price)
                </div>
                <div class="col-md-1">
                    @((Model.BasketLines[i].Quantity * Model.BasketLines[i].Product.Price).ToString("c"))
                </div>
                <div class="col-md-1">
                    <a href="@Url.Action("RemoveLine", "Basket",new { id = Model.BasketLines[i].Product.ID })" class="remove-feature">&#10005;</a>
                </div>
            </div>
            <hr />
            }
        }
        <div class="row basket-total">
            <div class="col-md-8" style="text-align:center">
                @Html.DisplayNameFor(model => model.TotalCost)
            </div>
            <div class="col-md-1">
                @Html.DisplayFor(model => model.TotalCost)
            </div>
            <div class="col-md-1">
                @Html.ActionLink("Order Now", "Review", "Orders", null, new { @class = "btn btn-success order-now" })
            </div>
        </div>
    </div>
}
else
{
    <p>Your Basket is empty</p>
}

<div style="margin-bottom: 1rem; margin-top: 1rem;">
    @Html.ActionLink("Continue Shopping", "Index", "Products")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
